# yaml-language-server: $schema=../../../../../../../../bin/generator/sdk_generator/data/sdk_data_schema/v3/software_set_and_project_schema.json

__load__:
- middleware/secure-subsystem/add_secure-subsystem_v3.yml

__hierarchy__:
  tmp_demo_app_set:
    section-type: application
    belong_to: set.board.${board}
    contents:
      configuration:
        tools:
          __common__:
            config:
              __common__: {}
              debug:
                cc-define:
                  DEBUG:
                cx-define:
                  DEBUG:
          iar:
            config:
              __common__:
              release: {}
          mdk:
            config:
              release: {}
      modules:
        boardset:
          required: true
          cc-include:
          - path: boards/${board}
            package_path: project-root-path
            project_path: board
          files:
          - source: boards/${board}/board.c
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/board.h
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/clock_config.c
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/clock_config.h
            package_path: project-root-path
            project_path: board
        device_configuration_data:
          required: false
          cc-include:
          - path: boards/${board}
            package_path: project-root-path
            project_path: board
          files:
          - source: boards/${board}/dcd.c
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/dcd.h
            package_path: project-root-path
            project_path: board
        readme:
          files:
          - source: project-root-path/readme.txt
            toolchains: iar mdk mcux armgcc
            project_path: doc

secure-subsystem_digest:
  section-type: application
  belong_to: set.board.${board}
  dependency:
  - driver.port
  - middleware.secure-subsystem
  contents:
    document:
      name: secure-subsystem_digest
      readme:
      - boards/${board}/secure-subsystem_examples/secure-subsystem_digest/board.readme
      - middleware/secure-subsystem/example/secure-subsystem_digest/secure-subsystem_digest.readme
      category: secure-subsystem_examples
      brief: The secure-subsystem digest demo application performs digest computation
        with SSS APIs.
    project-root-path: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}
    configuration:
      tools:
        __common__:
          config:
            __common__: {}
    modules:
      demo:
        required: true
        cc-include:
        - path: boards/${board}/secure-subsystem_examples/secure-subsystem_digest
          package_path: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}
          project_path: board
        - path: middleware/secure-subsystem/inc
          project_path: secure-subsystem/inc
        files:
        - source: middleware/secure-subsystem/example/secure-subsystem_digest/digest.c
          merge-to-main: main
          package_path: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}
          project_path: source
        - source: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/pin_mux.c
          package_path: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}
          project_path: board
        - source: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/pin_mux.h
          package_path: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}
          project_path: board
        - source: middleware/secure-subsystem/inc/fsl_sss_api.h
          project_path: secure-subsystem/inc
        - source: middleware/secure-subsystem/inc/fsl_sss_config.h
          project_path: secure-subsystem/inc
      pinset:
        required: true
        cc-include:
        - path: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}
          project_path: "${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}"
        files:
        - source: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}/hardware_init.c
          merge-to-main: sub
          project_path: "${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}"
        - source: boards/${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}/app.h
          merge-to-main: sub
          project_path: "${board}/secure-subsystem_examples/secure-subsystem_digest/${multicore_foldername}"
secure-subsystem_se_asymmetric:
  section-type: application
  belong_to: set.board.${board}
  dependency:
  - driver.port
  - middleware.secure-subsystem
  contents:
    document:
      name: secure-subsystem_se_asymmetric
      readme:
      - boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/board.readme
      - middleware/secure-subsystem/example/secure-subsystem_se_asymmetric/secure-subsystem_se_asymmetric.readme
      category: secure-subsystem_examples
      brief: The secure-subsystem digest demo application performs digest computation
        with SSS APIs.
    project-root-path: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}
    configuration:
      tools:
        __common__:
          config:
            __common__: {}
    modules:
      demo:
        required: true
        cc-include:
        - path: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric
          package_path: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}
          project_path: board
        files:
        - source: middleware/secure-subsystem/example/secure-subsystem_se_asymmetric/se_asymmetric.c
          merge-to-main: main
          package_path: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}
          project_path: source
        - source: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/pin_mux.c
          package_path: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}
          project_path: board
        - source: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/pin_mux.h
          package_path: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}
          project_path: board
      pinset:
        required: true
        cc-include:
        - path: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}
          project_path: "${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}"
        files:
        - source: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}/hardware_init.c
          merge-to-main: sub
          project_path: "${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}"
        - source: boards/${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}/app.h
          merge-to-main: sub
          project_path: "${board}/secure-subsystem_examples/secure-subsystem_se_asymmetric/${multicore_foldername}"
ele_symmetric:
  section-type: application
  belong_to: set.board.${board}
  dependency:
  - driver.port
  - middleware.secure-subsystem
  - middleware.secure-subsystem.elemu
  - driver.elemu
  contents:
    document:
      name: ele_symmetric
      readme:
      - boards/${board}/secure-subsystem_examples/ele_symmetric/board.readme
      - middleware/secure-subsystem/example/ele_symmetric/ele_symmetric.readme
      category: secure-subsystem_examples
      brief: The secure-subsystem demo application performs AES CBC symmetric operation
        with SSS APIs using EdgeLock Secure Enclave.
    project-root-path: boards/${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}
    configuration:
      tools:
        __common__:
          config:
            __common__: {}
    modules:
      demo:
        required: true
        cc-include:
        - path: boards/${board}/secure-subsystem_examples/ele_symmetric
          package_path: boards/${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}
          project_path: board
        files:
        - source: middleware/secure-subsystem/example/ele_symmetric/ele_symmetric.c
          merge-to-main: main
          package_path: boards/${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}
          project_path: source
        - source: boards/${board}/secure-subsystem_examples/ele_symmetric/pin_mux.c
          package_path: boards/${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}
          project_path: board
        - source: boards/${board}/secure-subsystem_examples/ele_symmetric/pin_mux.h
          package_path: boards/${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}
          project_path: board
      pinset:
        required: true
        cc-include:
        - path: boards/${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}
          project_path: "${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}"
        files:
        - source: boards/${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}/hardware_init.c
          merge-to-main: sub
          project_path: "${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}"
        - source: boards/${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}/app.h
          merge-to-main: sub
          project_path: "${board}/secure-subsystem_examples/ele_symmetric/${multicore_foldername}"
